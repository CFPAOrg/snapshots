Tutorial 2
Let's talk about the "Number" parameter we saw last time. You'll notice that parameter has an extra option in the center. That means the parameter is optional. By selecting the center, you can disable it.<br><br>In our case, the "Number" parameter is simply a label of sorts, it can be useful if we have a more complex spell where we have multiple things being sent out to chat. It requires a Number, so let's give it one. We now have access to a "Constant: Number" piece. Add the "Number" parameter to your Debug piece and add a "Constant: Number" piece to your grid and connect it to your Debug piece. You can set the number by clicking on the piece and just typing the number with your keyboard.<br><br>Now that we're dealing with multiple parameters, you can assume that in a more complex grid, not everything will be adjacent just as it currently is. That's where Connectors, another piece introduced here, come in. Connectors do exactly as the name says, and allow a piece to connect to another, they're like a wire. You can put a connector adjacent to a piece, and it'll transfer whatever that piece contains to whatever is on the end of the connector. You can make connectors line up with other connectors if what you need is far away. A single connector line can send the object that points to it to any other runes that are oriented to tap on to it.<br><br>Remember, to level up, you need to make a spell using the piece highlighted in red, so you need to use your "Constant: Number" piece, preferably alongside the Debug trick from Tutorial 1, but give Connectors a try as well, they'll be very important later!
Tutorial 3
Ok, ok. I know what you're thinking. "This is boring, when do we start doing cool stuff?" Well... now!<br><br>It's time we introduce a Trick that actually does some sort of interaction with the world. Bring in "Trick: Add Motion". This trick, as you'd expect, adds movement to an entity. It takes an Entity, a Vector and a Number Constant. As you should've figured out already, "Selector: Caster" returns an Entity (Player), which, if you'd use with your new "Trick: Add Motion", you could use it to add movement to your player character. The Vector is the direction in which you want the movement to be added, and the Number Constant is the speed you want to apply. Obviously, you can get this number using "Constant: Number".<br><br>We don't have any great tricks up our sleeve to get a vector for the trick, but we do have "Operator: Entity Look", which gets us a vector corresponding to the direction the player is looking. If we pass that into our "Trick: Add Motion", the player character will move in the direction they're looking. As for the number, go with 3 for now. You can change it of course, but 3 is a good one.You'll notice that when you modify the value of the constant, the numbers on the right change. These numbers are relevant now. They are the stats of your spell. The stats of your spell match up to those of your Rod, and if any of your spell's stats are below the stats of your Rod, you won't be able to cast the spell.<br><br>From the top to bottom, the stats are as follows:<br>&nComplexity&r: The amount of actions your spell has. Constants, connectors and Debug Tricks aren't counted.<br>&nPotency&r: The power of your spell. As you increase the power of your tricks, this goes up.<br>&nCost&r: The amount of Psi (the energy bar on the right of your screen) your spell is going to consume. This doesn't match up to any Rod stat, but is affected by the Rod's Efficiency. The actual value that is consumed is the one inside parenthesis. The higher the Efficiency of your Rod, the less extra you'll have to pay.<br>&nProjection&r: The amount of Tricks in your spell. Debug Tricks aren't counted.<br>&nBandwidth&r: The width or height of your spell, whichever is the highest. If you find you're going over this, try making your spell more compact.