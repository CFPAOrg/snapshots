Memory Management
This group introduces the ability for spells to harness Persistent Memory in one's Rod. A Rod can store Vector type values for use in future spellcasts. The amount of Vectors that can be stored is equal to the Rod's "Notches" stat divided by 3, rounded down. This is refered to the amount of Memory Slots present in the Rod.<br><br>The group includes two runes, simple IO style runes to read and write vectors to and from the memory. The red piece, "Trick: Save Vector" saves a vector to the target Memory Slot, whereas "Selector: Saved Vector" gets the vector saved in the Memory Slot defined by its only parameter. Memory Slots for these runes start in 1, so a Rod with 3 memory slots would accept values 1, 2, and 3. Both runes add Potency to the spell equivalent to the number of the slot used.<br><br>One imperfection with these runes is the fact that "Trick: Save Vector" "locks" the target Memory Slot when used, preventing any of the two runes from interacting with that same Memory Slot in the current spell cast after it goes through, be that read or write. So if you need to read the value in the slot before you write something, make sure to keep the fundamental rules of Flow Control in mind, to make sure the read goes through before the write.
Secondary Operators
As the name implies, this group includes mathematical operators that aren't quite as important as the "primary" ones, such as sum or subtract. This group is, really, just a mixed bag of all sorts of math or logic relates runes that can be used to help with spell creation. We'll separate the runes in two sets to make them easier to explain.<br><br>The first set is related to powers. Including runes like "Operator: Square", "Operator: Power", "Operator: Square Root" and even "Operator: Logarithm". Most of these operate in a pretty standard fashion, with not much to talk about, except "Operator: Logarithm". This piece, as the name implies, executes the logarithm of the number passed in. The piece takes an optional Base paramter, and will calculate the logarithm for that base. If no base is passed in, it'll default to base 10. There's also "Constant: e", if you feel like using that, for whatever reason.<br><br>The second set is related to logic. It includes runes that do rounding (to an integer), "Operator: Ceiling", "Operator: Floor" and "Operator Round", which respectively round up, round down and round depending on the fractional part of the number. It also includes "Operator: Min" and "Operator: Max". These are pretty simple. They, respectively, get the smallest number and the largest number between the various numbers passed in.