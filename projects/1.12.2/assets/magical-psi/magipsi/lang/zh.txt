Magical Psi
&7Hold &bSHIFT&7 for more info
&aComponent Type&7: %s
(none)
Stats
Notching
Magical Psi Master Keybind
&dSpell Selected&7: %s
Name:
Inscription Successful
Inscription Errored
Your Rod's Stats are too weak to cast this Spell.
Constant
Next Page
Previous Page
Config
It seems like someone else is using this. Probably better not to mess with it. 
You have no idea how to operate this.
Level %d
Level %d - Level Points: %d
Level %d (Creative) - Level Points: %d
Locked
Requirements
Learn
Level Up
Psi Beta | Not final!
&bType&7: %s
&bCost Multiplier&7: %s%%
You got 1 Level Point
Unequip your Rod and press [%s] to use it!
Import from Clipboard
Export to Clipboard
(Must be holding SHIFT)
Import error: Malformed String: %s
Import error: Missing spell runes used for import.
Load?
[Spectator Mode]
The other Rod in your inventory is interfering with your cast. You can only have one Rod on you at a time.
&7Addon: &9%s
^Trick: (.+)$
&eInscriber Help
Ctrl
Cmd
Press Enter to commit
Use ; to change line
Selected: [%d, %d] | Cursor: [%d, %d]
Selected: [%d, %d]
You have reached level 25. While there are more levels to earn and more runes to unlock, this is the last level in which you will receive more Psi energy, so your Psi energy will be left at a maximum of 5000 from now on, instead of continuing to expand.
Spell stored
Rod assembled
Rod casts
Rod loopcasts
Seems like Psi is outdated. What a shame.
Are you Psiched to update Psi?
Psi is outdated. You expected a funny message but it's just outdated, sorry :(
You can download the new Psi update from the servers at Magic High School.
Psi is outdated. On the flip pside, you can update it.
Only Weeds leave Psi outdated.
Don't be a Psicho, update Psi.
Psi is up to date. Psiche! I fooled you.
You should update Psi, get it from the webpsite.
Don't confuse yourself like a Psiduck, update Psi.
You are running Psi build %s, the latest is build %s.
["Click for... [",{"text":"Download","color":"aqua","hoverEvent":{"action":"show_text","value":{"text":"Click this to automatically download the latest version","color":"aqua"}},"clickEvent":{"action":"run_command","value":"/psi-download-latest %version%"}},"] [",{"text":"Website","color":"aqua","hoverEvent":{"action":"show_text","value":{"text":"Click this to go to the mod's website","color":"aqua"}},"clickEvent":{"action":"open_url","value":"http://psi.vazkii.us/downloads.php"}},"] [",{"text":"Changelog","color":"aqua","hoverEvent":{"action":"show_text","value":{"text":"Click this to go to the version's Changelog","color":"aqua"}},"clickEvent":{"action":"open_url","value":"http://psi.vazkii.us/changelog.php#%version%"}},"]"]
[{"text":"Starting download of %s. Please do not remove your hard disk. Enjoying ","color":"yellow"},{"text":"Psi","color":"aqua"},{"text":"? Consider supporting ","color":"yellow"},{"text":"Vazkii","color":"light_purple"},{"text":" on ","color":"yellow"},{"text":"[Patreon]","color":"gold","hoverEvent":{"action":"show_text","value":{"text":"Click this to go to Vazkii's Patreon","color":"light_purple"}},"clickEvent":{"action":"open_url","value":"http://www.patreon.com/Vazkii"}},{"text":"!","color":"yellow"}]
Finished downloading %s. Delete your old Psi .jar and reload your game to update.
You already downloaded the latest version. Close your game, delete the old version from your mods folder and load it again to update!
The update is already downloading, give it some time, will you?
Woah! It seems like something went wrong while trying to download the Psi update. Is psi.vazkii.us down?
Sorry. This feature is currently disabled due to server host problems, it should be back soon.
Rod Constructor
Spell Inscriber
Psidust Block
Psimetal Block
Psigem Block
Dark Psimetal Plate
Dark Psimetal Flow Plate
Bright Psimetal Plate
Bright Psimetal Flow Plate 
Ebony Psimetal Block
Ivory Psimetal Block
Conjured Block
Psidust
Psimetal Ingot
Psigem
Ebony Psimetal Ingot
Ivory Psimetal Ingot
Ebony Substance
Ivory Substance
Focusing Rod
Iron Rod Frame
Gold Rod Frame
Psimetal Rod Frame
Ebony Psimetal Rod Frame
Ivory Psimetal Rod Frame
Creative Rod Frame
Humble Rod Crux
Quick Rod Crux
Bright Rod Crux
Swift Rod Crux
Radiant Rod Crux
Minor Rod Notch
Flashing Rod Notch
Medium Rod Notch
Beaming Rod Notch
Major Rod Notch
Glowing Rod Source
Sparkling Rod Source
Bursting Rod Source
White Rod Varnish
Orange Rod Varnish
Magenta Rod Varnish
Light Blue Rod Varnish
Yellow Rod Varnish
Lime Rod Varnish
Pink Rod Varnish
Gray Rod Varnish
Light Gray Rod Varnish
Cyan Rod Varnish
Purple Rod Varnish
Blue Rod Varnish
Brown Rod Varnish
Green Rod Varnish
Red Rod Varnish
Black Rod Varnish
Rainbow Rod Varnish
Psi Rod Varnish
Spell Node
Programmed Spell Node
Projectile Spell Node
Inscribed Projectile Spell Node
Loopcast Spell Node
Inscribed Loopcast Spell Node
Circle Spell Node
Inscribed Circle Spell Node
Grenade Spell Node
Inscribed Grenade Spell Node
Charge Spell Node
Inscribed Charge Spell Node
Mine Spell Node
Inscribed Mine Spell Node
Mindful Scroll
Psimetal Shovel
Psimetal Pickaxe
Psimetal Axe
Psimetal Sword
Spell Detonator
Focusing Plate Helmet
Focusing Plate Chestplate
Focusing Plate Leggings
Focusing Plate Boots
Focusing Plate Tablet
Focusing Plate Light Sensor
Focusing Plate Water Sensor
Focusing Plate Heat Sensor
Focusing Plate Stress Sensor
Vector Ruler
%s overflowed their Psionic Energy
Frame
Crux
Notch
Source
Varnish
Efficiency
Potency
Complexity
Projection
Bandwidth
Notches
Overflow
Complexity
Amount of actions
Potency
Power of the spell
Cost
Psi cost on casting
Projection
Amount of tricks
Bandwidth
Spell width or height (largest)
Normal
Projectile
Loopcast
Spell Circle
Grenade
Charge
Mine
(No Event Handler)
&bEvent&7: Damage
&bEvent&7: Tick
&bEvent&7: Jump
&bEvent&7: Low Light
&bEvent&7: Underwater
&bEvent&7: On Fire
&bEvent&7: Low Health
 &dKeybinds
  Delete Rune: &dDelete
  Clear Grid: &d%1$s-Shift-Delete
  Shift Grid: &d%1$s + Arrow Keys
  Copy/Cut/Paste: &d%1$s-C/%1$s-X/%1$s-V
  Undo/Redo: &d%1$s-Z/%1$s-Y
  Open Panel/Select Rune: &dEnter
  Set Parameter: &dNumber Keys + Arrow Keys
  Set Comment: &d%1$s-D
  Switch Focus: &dTab
  Show Tooltip: &dAlt
  Move Cursor: &dArrow Keys
  Upload To Imgur: &d%1$s-Shift-Alt-G
  Share To Reddit: &d%1$s-Shift-Alt-R
 &dSearch Terms
  Accepting Type: &din:(type)
  Outputting Type: &dout:(type)
  Name Begins With: &d(name)_
  Name Ends With: &d_(name)
Selector: Caster
Selects the person casting the spell
Selector: Focal Point
Selects the Focal Point Entity of this spell
Selector: Nearby Items
Selects items near the given position
Selector: Nearby Living
Selects living beings near the given position
Selector: Nearby Enemies
Selects enemies near the given position
Selector: Nearby Animals
Selects animals near the given position
Selector: Nearby Projectiles
Selects projectiles near the given position
Selector: Nearby Smeltables
Selects smeltable items near the given position
Selector: Loopcast Index
Selects the amount of loopcast executions done
Selector: Block Broken
Selects the Block Broken (for Tools)
Selector: Block Broken Side
Selects the side in which a Block was broken (for Tools)
Selector: Attack Target
Selects the entity attacked by a caster
Selector: Sneak Status
Selects if the caster is sneaking (1 if no, 0 if yes)
Selector: Time
Selects the Rod's internal time (in ticks)
Selector: Attacker
Selects the entity that attacked the caster
Selector: Damage Taken 
Selects the amount of damage the caster took
Selector: Ruler Vector 
Selects the vector defined by a Vector Ruler
Selector: Item Presence
Selects the size of an inventory item stack
Selector: Block Presence
Selects a block's presence and solidity
Selector: Saved Vector
Selects a saved vector from Rod Memory
Selector: Eidos Changelog
Selects a position from the Eidos Changelog
Operator: Sum
A + B (+ C)
Operator: Subtract
A - B (- C)
Operator: Multiply
A * B (* C)
Operator: Divide
A / B
Operator: Absolute
Calculates the absolute value of a number
Operator: Inverse
Calculates a number's inverse
Operator: Modulus
A % B (Integer)
Operator: Integer Divide
A / B (Integer)
Operator: Random
Random between 0 and the given number (exclusive)
Operator: Sine
sin(A)
Operator: Cosine
cos(A)
Operator: Arc Sine
asin(A)
Operator: Arc Cosine
acos(A)
Operator: Max
Gets the largest value of those passed in
Operator: Min
Gets the smallest value of those passed in
Operator: Square
A^2
Operator: Cube
A^3
Operator: Power
A^B
Operator: Square Root
sqrt(A)
Operator: Logarithm
log(A) or logB(A)
Operator: Ceiling
Rounds up a number to an integer
Operator: Floor
Rounds down a number to an integer
Operator: Round
Rounds a number to an integer
Operator: Entity Position
Gets an Entity's position
Operator: Entity Look
Gets an Entity's look vector
Operator: Entity Motion
Gets an Entity's motion vector
Operator: Entity Axial Look
Gets an Entity's look vector, aligned to an axis
Operator: Focused Entity
Gets the entity the target entity is looking at
Operator: Vector Raycast
Gets a localized raycast's result (max 32)
Operator: Vector Axis Raycast
Gets a localized raycast's side axis (max 32)
Operator: Vector Sum
A + B (+ C)
Operator: Vector Subtract
A - B (- C)
Operator: Vector Multiply
A * B
Operator: Vector Divide
A / B
Operator: Vector Cross Product
A x B
Operator: Vector Normalize
Normalizes a Vector so its magnitude is 1
Operator: Vector Negate
Negates a vector
Operator: Vector Magnitude
Gets a vector's Magnitude
Operator: Vector Construct
Constructs a Vector from XYZ parameters
Operator: Vector Extract X
Extracts the X coordinate from a Vector
Operator: Vector Extract Y
Extracts the Y coordinate from a Vector
Operator: Vector Extract Z
Extracts the Z coordinate from a Vector
Operator: Vector Project
Projects Vector A onto Vector B
Operator: Vector Dot Product
A . B
Operator: Closest to Point
Gets the closest entity in a list to a point 
Operator: Random Entity
Gets a random entity from a list
Operator: Add To List
Adds target entity to a list
Operator: Remove From List
Removes target entity from a list
Constant: Number
Select and type to set value
Constant: Pi
Returns the value of Pi
Constant: e
Returns the value of e
Constant: Wrapper
A wrapper for a constant for stat calculation
Connector
Connects stuff and things
Error Suppressor
Suppresses errors thrown by the spell
Trick: Debug
For testing. Prints out the target
Trick: Sleep
Delays the spell for the amount of ticks passed in
Trick: Die
Stops spell execution if target is within ]-1, 1[
Trick: Evaluate
Evaluates a value. Does nothing with it
Trick: Add Motion
Adds motion to target Entity
Trick: Explode
Goes boom
Trick: Break Block
Breaks a block
Trick: Break Block Sequence
Breaks a sequence of blocks defined by a Vector
Trick: Place Block
Places a block (the one to the right of the Rod)
Trick: Place Block Sequence
Places a sequence of blocks defined by a Vector
Trick: Infusion
Infuses Gold into Psimetal
Trick: Blink
Blinks forward
Trick: Mass Blink
Blinks everybody forward
Trick: Mass Add Motion
Adds motion to all entities in target Entity List
Trick: Mass Exodus
Moves all entities in target Entity List to target position
Trick: Move Block
Moves a block by target (normalized) axial vector
Trick: Collapse Block
Collapses a block, as if it were sand
Trick: Smite
Calls down lightning at the given point
Trick: Blaze
Creates fire at the given point
Trick: Torrent
Creates water at the given point
Trick: Overgrow
Fertilizes a block at the given point
Trick: Greater Infusion
Infuses Diamonds into Psigems
Trick: Ebony And Ivory
Infuses Coal and Quartz. Must be used in the End
Trick: Speed
Applies a Speed effect
Trick: Haste
Applies a Haste effect
Trick: Strength
Applies a Strength effect
Trick: Jump Boost
Applies a Jump Boost effect
Trick: Water Breathing
Applies a Water Breathing effect
Trick: Fire Resistance
Applies a Fire Resistance effect
Trick: Invisibility
Applies an Invisibility effect
Trick: Regeneration
Applies a Regeneration effect
Trick: Resistance
Applies a Resistance effect
Trick: Slowness
Applies a Slowness effect
Trick: Weakness
Applies a Weakness effect
Trick: Wither
Applies a Wither effect
Trick: Ignite
Sets an entity on fire
Trick: Eidos Anchor
Returns the caster to current position after target Time
Trick: Eidos Reversal
Takes the caster back in time
Trick: Smelt Item
Smelts an item entity into its smelted counterpart
Trick: Smelt Block
Smelts a block into its smelted counterpart
Trick: Conjure Block
Conjures a block in the given position
Trick: Conjure Light
Conjures a light in the given position
Trick: Conjure Block Sequence
Conjures a block sequence
Trick: Switch Focus Slot
Changes the focused slot of this spell
Trick: Save Vector
Saves a vector to Rod Memory
Target
Number
Number A
Number B
Number C
Number D
Vector A
Vector B
Vector C
Vector D
Position
Ray
Max
Min
Power
Direction
Speed
X
Y
Z
Radius
Distance
Time
List
Constant
Shift
Slot
Base
None
Any
Number
Number
Number
Vector
Entity
Entity (Living)
Entity (Living)
Entity (Player, Living)
Entity List
No Spell to compile
Spell is Unnamed
Spell has no Tricks
A required Parameter is not set
A Parameter is facing an empty cell
A Parameter is facing an invalid piece
Two or more Parameters are sharing a side
Can't resolve due to endless loop
A Number Parameter that needs to be positive isn't
A Number Parameter that needs to an integer isn't
A Number Parameter that needs to be a positive integer isn't
Spell Stats overflow past maximum possible integer
Two mutually exclusive parameters are set
Error Position: [%d, %d].
ERROR: Divide by zero.
ERROR: Spell Entity target is non existent.
ERROR: Spell Operation Vector is non existent or null.
ERROR: Spell target is outside maximum 32 block radius.
ERROR: Value is outside inverse trignometric function's domain.
ERROR: Attempted to cast a spell on an immune entity or a boss.
ERROR: Caster has no Rod.
ERROR: Memory access out of bounds.
ERROR: Memory slot is locked.
ERROR: Target entity is immune or a boss.
ERROR: Target number is negative in a piece where it can't be.
Welcome to Magical Psi, the best spell inscribing magic mod in this side of the universe. Please keep in mind that having Just Enough Items (JEI) or some other method of looking up recipes is essential for playing with Psi, as recipes are not included in this guide. In order to get started spellslinging, you'll need some Psidust. To get Psidust, you need to start by crafting a Rod Constructor and an Iron Rod Frame. Place down the Rod Contructor and put the Iron Rod Frame in it to construct a very barebones Rod. From there, drop some Redstone Dust in the world. Equip your Rod, point at the dropped items and right click to make your Psidust.
Psi has found save data from a previous world.<br>Would you like to load it?<br><br>If you choose to load it, you'll be taken instantly to Level %d. Otherwise, this message won't show up again this session.
Tutorial 1
Welcome to the leveling menu, it looks like you've gotten acquainted with your brand new Focusing Rod. This menu serves as your school for the mod, and this is your first tutorial! Don't worry, this is the longest one, as it has to teach you the basics. To get started inscribing spells you'll need a Spell Inscriber. To cast your spells, you'll also need a better Rod than the one you have right now, one with all the components. Look up all the various Rod components (Frame, Crux, Notch, Source, and optionally, Varnish) and create one. You don't have to make another Frame, you can put your current Rod (that is effectively just a Frame) in your crafting grid to revert it to a Frame.<br><br>Lastly, Spells also need to be put into Spell Nodes, so make yourself all of that stuff and let's get rolling.<br><br>After you're set with all you need. Open up your Spell Inscriber by right clicking it. You'll see a large grid. This is where the magic happens. The inscribing system is less of a traditionally complex inscribing system, and more of a simple sequence of actions. To add a piece to the grid, right click any part of it, and select from the runes that come up.<br><br>As you can see at the bottom, you have two available runes. Once you have more, you'll be able to assemble them to create spells in a myriad of different ways, but for now, let's just focus on these two. The runes you have available are the "Selector: Caster" and the "Trick: Debug". Tricks are the most important part of a spell, they are the means through which the spell interacts with the world. In our case, the Debug trick is an exception, as it just writes a value to the player's chat.<br><br>Start off by placing them in your grid adjacent to eachother. When you left click on your "Selector: Caster", you'll find that nothing special happens. However, when you do the same for your "Trick: Debug", a panel appears on the left where you can configure the inputs of this piece, the piece's "parameters". Parameters are info that goes to the piece, in order to allow it to do it's thing. Our Debug trick sends out something to chat, so we need to know what that thing is. Take the Target parameter, and click one of the arrows, so that your "Selector: Caster" looks like it's pointing towards the "Trick: Debug". If you hold Shift while looking at a piece, you can see what types of parameters it needs or what type it sends out. This is useful, so you can pair the right runes together. Ignore the Number parameter for now, we'll cover it later.<br><br>If you've done this correctly, you should see the X on the top turns into a checkmark, and some values appear on the right. Don't worry about those for now. If you're still seeing the red X, hover over it to see what the error is and try to correct it.<br><br>Now we need to take the program you've made and send it over to your Rod. Grab your Spell Node and right click your Spell Inscriber with it. You'll hear a beep boop, and are now ready to load the bullet. Place your new Rod into your Constructor, into the big slot on the top-left, and you'll see some slots below it open up. Place your bullet in there, then you can take your Rod out. To pick a spell, hold your Rod and hold the same key you use to access this menu. NOTE: You may only have a single Rod on you. If you have more than one in your inventory, spells will not work.<br><br>In order to level up, you need to create and cast a spell that contains the piece highlighted in red on the last thing you've learned. In our case, we need a spell with a "Trick: Debug" to be able to level up. Right click your Rod with your bullet loaded and you should be ready to move on. If you want to create more Psidust, simply pick a slot that has no bullet in it.
Tutorial 2
Let's talk about the "Number" parameter we saw last time. You'll notice that parameter has an extra option in the center. That means the parameter is optional. By selecting the center, you can disable it.<br><br>In our case, the "Number" parameter is simply a label of sorts, it can be useful if we have a more complex spell where we have multiple things being sent out to chat. It requires a Number, so let's give it one. We now have access to a "Constant: Number" piece. Add the "Number" parameter to your Debug piece and add a "Constant: Number" piece to your grid and connect it to your Debug piece. You can set the number by clicking on the piece and just typing the number with your keyboard.<br><br>Now that we're dealing with multiple parameters, you can assume that in a more complex grid, not everything will be adjacent just as it currently is. That's where Connectors, another piece introduced here, come in. Connectors do exactly as the name says, and allow a piece to connect to another, they're like a wire. You can put a connector adjacent to a piece, and it'll transfer whatever that piece contains to whatever is on the end of the connector. You can make connectors line up with other connectors if what you need is far away. A single connector line can send the object that points to it to any other runes that are oriented to tap on to it.<br><br>Remember, to level up, you need to make a spell using the piece highlighted in red, so you need to use your "Constant: Number" piece, preferably alongside the Debug trick from Tutorial 1, but give Connectors a try as well, they'll be very important later!
Tutorial 3
Ok, ok. I know what you're thinking. "This is boring, when do we start doing cool stuff?" Well... now!<br><br>It's time we introduce a Trick that actually does some sort of interaction with the world. Bring in "Trick: Add Motion". This trick, as you'd expect, adds movement to an entity. It takes an Entity, a Vector and a Number Constant. As you should've figured out already, "Selector: Caster" returns an Entity (Player), which, if you'd use with your new "Trick: Add Motion", you could use it to add movement to your player character. The Vector is the direction in which you want the movement to be added, and the Number Constant is the speed you want to apply. Obviously, you can get this number using "Constant: Number".<br><br>We don't have any great tricks up our sleeve to get a vector for the trick, but we do have "Operator: Entity Look", which gets us a vector corresponding to the direction the player is looking. If we pass that into our "Trick: Add Motion", the player character will move in the direction they're looking. As for the number, go with 3 for now. You can change it of course, but 3 is a good one.You'll notice that when you modify the value of the constant, the numbers on the right change. These numbers are relevant now. They are the stats of your spell. The stats of your spell match up to those of your Rod, and if any of your spell's stats are below the stats of your Rod, you won't be able to cast the spell.<br><br>From the top to bottom, the stats are as follows:<br>&nComplexity&r: The amount of actions your spell has. Constants, connectors and Debug Tricks aren't counted.<br>&nPotency&r: The power of your spell. As you increase the power of your tricks, this goes up.<br>&nCost&r: The amount of Psi (the energy bar on the right of your screen) your spell is going to consume. This doesn't match up to any Rod stat, but is affected by the Rod's Efficiency. The actual value that is consumed is the one inside parenthesis. The higher the Efficiency of your Rod, the less extra you'll have to pay.<br>&nProjection&r: The amount of Tricks in your spell. Debug Tricks aren't counted.<br>&nBandwidth&r: The width or height of your spell, whichever is the highest. If you find you're going over this, try making your spell more compact.
Tutorial 4
Do you like explosions? Of course you do. Let's make a spell that explodes the block the player is looking at.<br><br>For this, we are going to need "Trick: Explode". This takes a Vector and a Number Constant. Similarly to our "Trick: Add Motion", this constant is the power of the trick. The vector is where you want the explosion to happen. We already used "Operator: Entity Look", but that gives us a vector that's very short. If we used that, the explosion would happen in our face! Instead, we want to use an "Operator: Vector Raytrace".<br><br>This operator takes a position and a ray, both Vectors. From the position, which will be the player's position, acquirable through "Operator: Entity Position", the operator extends the "Ray" parameter vector until it collides with a block in the world. (Note: "Operator: Entity Position" returns a vector whose Y value is 1.6 higher than usual if used on a player.)<br>Therefore, if we use it alongside "Operator: Entity Look", we can find out where the player is looking at and create our explosion there.One thing we have to keep in mind is the fact that spells are to a range of 32 blocks from their focal point, in our case, the player casting the spell. Our explosion can't be farther than 32 blocks away from the player.<br><br>Lastly, the "Error Suppressor" piece does exactly as it describes. If something goes wrong while casting your spell, you'll get an error in your chat telling you what went wrong. Sometimes that can get annoying, when you know a spell has a possible failiure state. In that case. throw in an "Error Suppressor" anywhere in your spell's grid and all the errors will be gone.<br><br>This will be your last basic tutorial, from here you'll be able to pick between various things to pick as you level up. Have fun!
Numbers 101
Numbers are an essential component to Spell Inscribing. These are basic arithmetic operators that can be used for math in spells.<br><br>If you don't have anything that uses numbers yet, try adding up two constants for a Debug trick.<br><br>Make sure to take note the difference between "Number" and "Number Constant" when holding Shift on any spell piece. A parameter that requires a "Number Constant" can't take a "Number", but a parameter that requires a "Number" can take a "Number" or a "Number Constant". 
Vectors 101
Vectors are an essential component to Spell Inscribing. Many vectorial operations here included are very elementary, such as sum or subtraction. The red piece of this set, "Operator: Vector Construct" creates a Vector given the X, Y and Z coordinates. Try using it with "Trick: Add Motion" to make a spell that makes you jump up.<br><br>Regarding another complicated piece in this group: A Cross Product of two vectors is a vector that is perpendicular to both. You can make use of this to get a vector that goes to the player's side, by executing the Cross Product of the player's look vector and (0, 1, 0), which you can get with "Operator: Vector Construct". 
Entities 101
Entities are an essential component to Spell Inscribing. While using components like "Selector: Caster" it's possible to get the person casting the spell, the runes included here allow for targeting other entities in the world.<br><br>You can make use of the runes here to create spells that affect other entities. Try using it with "Trick: Add Motion" on them instead of yourself.
Alternative Casting
Aside from the standard Spell Nodes, alternate spell nodes can be created, that allow for spells to be casted in different ways.<br><br>Projectile Spell Nodes, instead of casting the spell straight away, emit a projectile, that casts the spell upon colliding with something. Grenade Spell Nodes function similarly to the Projectile ones, but create a "grenade" style projectile that is affected by gravity and explodes (casting the spell) after 3 seconds of being fired. Charge Spell Nodes work like the Grenade ones, but will only cast the spell when ignited by a Spell Detonator item. Mine Spell Nodes also work like the Grenade ones, and will cast the spell once an entity walks into them and walks out. Circle Spell Nodes create a Spell Circle where the caster is looking, the spell is cast on the position of the spell circle 20 times over the course of 5 seconds.<br><br>The usage of alternative nodes like these requires the introduction of the "Selector: Focal Point" piece, which selects the Focal Point of the spell. For normal Spell Nodes, the Focal Point is the player itself, whereas for Projectile (or any of the derivate) Spell Nodes, the Focal Point is the projectile entity. Naturally, for Circle Spell Nodes, the Focal Point will be the spell circle. "Selector: Caster" always remains unchanged.<br><br>The 32 block limit on spells exists around the Focal Point, so these alternate spell nodes allow for spell effects to happen farther away. Furthermore, a spell can always affect its Caster, even if the Caster is outside the 32 block radius of the Focal Point. The Spell Detonator item can only detonate charges in a 32 block radius.<br><br>The other piece of the group, "Selector: Ruler Vector" is to be used with a Vector Ruler. This item allows you to define a vector in world. Shift-right click a block to set the source and normal right click another to set the destination. When you use the selector, it gets the vector you selected. In the case that you have multiple Vector Rulers on you, the first one is used, hotbar taking priority.
Blockworks
Working with blocks is an essential skill. As blocks are aligned to a grid in the world, you can refer to a block's position via a Vector, so knowledge of the Vector concepts is rather important for understanding the contents of Blockworks.<br><br>Two of the most basic runes in this group are the "Place Block" and "Break Block" Tricks. They take a Vector and either place, and break a block in the position respective to it. For the case of "Trick: Place Block", the block placed is the one to the right of the player's Rod, on the hotbar. Of course, one of those blocks is taken from the player's inventory. Knowing where to place or break a block is easy, as it can be done through "Operator: Vector Raycast".<br><br>There is something we have to keep in mind, however. A standard implementation of "Operator: Vector Raycast" gives us the block the player is looking at, we can't place a block there, as one already exists! To remedy that, we can combine our "Operator: Vector Raycast" with the new "Operator: Vector Axis Raycast" piece, which gives us a vector equivalent to the side of the block we're looking at, so if we're looking at the top of the block, it'll give us a axial vector (0, 1, 0). We can then sum that, using "Operator: Vector Sum" to the result of our raycast to get where to place our block!<br><br>In a similar fashion, "Operator: Entity Axial Look" gets an axial vector equivalent to the axis the player is looking at. Think of the "Facing" value in your F3 menu. "Operator: Entity Axial Look" does something similar. Say "Facing" would say "east", then "Operator: Entity Axial Look" would get you a vector (1, 0, 0). This, unlike the "Facing" value also detects when you're looking up and down.<br><br>The other two tricks available here are "Trick: Place Block Sequence" and "Trick: Break Block Sequence", the latter being the red piece for this group. These tricks break or place a line of blocks. Similarly to the standard break and place tricks, they require a position to start off, but they also require another Vector, "Target", that defines the line in which it should interact. So if "Target" is (0, 4, 0), it'll place or break 4 blocks up, starting from the value of "Position". The last component to these tricks is "Max", this is a number constant for the maximum amount of blocks the trick is allowed to break or place. Since the vector requirements aren't constant, this works as means of calculating the Potency and Cost of the trick. The higher you set it, the more the spell will cost.<br><br>The last piece in this group is "Operator: Vector Project". Vector Projection is a somewhat complex topic, so this will only explain one of the potential uses for it, that being projecting a vector onto an axis. Imagine you want to make a spell that places blocks from your position in the world to the position you're looking at, but in a straight line aligned to the side of the block you're lookig at (using "Operator: Vector Axis Raycast"). You start off by getting the vector that you want to place blocks on, for using "Trick: Place Block Sequence", but if you're diagonal to the block, you may get something like (3, 2, 4). That's not a straight line! We can use "Operator: Vector Project" to project that into the axis of the side you're looking at, say, (0, 0, 1). So our "Vector A" is (3, 2, 4) and our "Vector B" is (0, 0, 1). Applying the projection leaves us with (0, 0 4). If our "Vector B", was, for example, (1, 0, 0), we'd get (3, 0, 0). For the case where an axial vector is used in B, Vector Projection strips any parts of A that are 0 in B. We can then do our straight line.<br><br>As the red piece in this group is "Trick: Break Block Sequence", you won't need anything too crazy for the most part. Try making a spell that brings down an 8 block high column, so you can "treecapitate".
Psimetal Infusion
Psimetal is an important component to creating Focusing Rods with better Psi conduction. The "Trick: Infusion" piece executes a release of psionic energy similar to that of a cast with no nodes, except more concentrated and focused.<br><br>The piece takes no parameters, and functions the exact same manner as infusing Redstone to create Psidust does. To infuse Psimetal, drop Gold Ingots around, and cast a spell with "Trick: Infuse".<br><br>Psimetal can not only be used to create more powerful Rod components, but also to create Mindful Scrolls. Mindful Scrolls function as a method of storing and transporting spells between various Inscriber blocks. To write a Spell onto a Mindful Scroll, simply shift-right click it on the Spell Inscriber. After the scroll has a spell, doing the same thing will set the spell on the inscriber instead. To remove the spell from the scroll, shift-right click the air.<br><br>Lastly, Mindful Scrolls can be copied by placing an empty one and a written one together in a crafting grid.  
Movement Advances
Movement and transport is a topic already addressed via the usage of "Trick: Add Motion". This group includes runes that improve on that concept.<br><br>"Trick: Blink" is the red piece of this group, and all it does is simply teleport the target entity wherever they're looking at forwards by the constant value passed in. A negative value will teleport the entity backwards. "Trick: Mass Blink" does the same as "Trick: Blink", but focused on an Entity List, having all of them be affected by the trick.<br><br>"Trick: Mass Add Motion" is self-explanatory, it's an Entity List version of "Trick: Add Motion", adding the same motion to every entity in the list.<br><br>Lastly, "Trick: Mass Exodus" moves every entity in an Entity List to a given position, with the given speed. Negative speed will move them away.
Loopcasting
Loopcasting is a style of magic defined by the usage of Loopcast Spell Nodes. When a spell is cast from a Loopcast Spell Node, it executes as if it was cast from a normal one, but also puts the player into a "loopcasting" state, where, until they unequip their Rod, will continuously cast the same spell at a rate of 4 times a second. The advantage of loopcasting is the fact that the initial cooldown to psi regeneration is only applied on the first spell in full. For each subsequent cast, the cooldown will be much shorter than usual, so, given a caster with a high enough level to sustain psi regeneration to cover the cost of a spell, said spell can be endlessly loopcasted.<br><br>The red piece of this group is "Selector: Loopcast Index". This piece selects the amount of times a spell has been loopcasted. For the initial cast this will be 0, and will be incremented once for every subsequent loopcast. This can be used alongside "Operator: Modulus" and "Operator: Integer Division" to alter how the spell functions every time it's cast.<br><br>"Operator: Integer Division" does exactly as it says on the tin, and executes division of the integer parts of the two numbers. "Operator: Modulus" calculates the remainer of the division of the integer parts of the two numbers. Using these runes, it's possible to do things such as digging undergound bunkers in any given size.<br><br>"Selector: Loopcast Index" also works with Circle Spell Nodes, returning the amount of times the spell has been cast by the spell circle, up to 20. 
Block Movement
The ability to move blocks isn't as important as the ability to break and place them, but under some cases can come in handy.<br><br>The red piece of this group, "Trick: Move Block" takes a position for a block in the world and moves it given the target vector. The target vector must be axial, if it isn't, the trick will fail.<br><br>The other piece, "Trick: Collapse Block", simply collapses a block as if it were sand or gravel.<br><br>Both these tricks will fail on complex blocks (also known as Tile Entities) or blocks that can't be harvested with Silk Touch.
Elemental Arts
What is a system that allows for manipulation of the world's properties if it didn't include some good old fashioned elemental themed magic?<br><br>This group contains Tricks for the four elements. The red piece of this group is "Trick: Smite", which creates a lightning bolt at the position passed in. The other tricks also do things of the sort.<br><br>The group also contains "Operator: Random", a piece that will generate a random number between 0 (inclusive) and the number passed in (exclusive). This can be used alongside Loopcast or Spell Circle spells in many ways. For example, one can create a spell that would use "Trick: Overgrow" to mass bone meal a plantation.
Greater Infusion
The ability to infuse Diamonds into Psigems is very important in the progress of spellslinging. Using Psigems, stronger Rod components can be created. Similarly to "Trick: Infusion", "Trick: Greater Infusion" will infuse nearby Diamonds, turning them into Psigems.<br><br>Furthermore, "Trick: Ebony And Ivory" will infuse Coal into an Ebony Substance and Nether Quartz into an Ivory Substance, both of which can be combined with a Psimetal Ingot to create the respective alloy. These alloys can later be used to create stronger Rod Frames. "Trick: Ebony And Ivory" can only be used while in the End. 
Tool Casting
Psimetal and Psigems can be crafted into a Toolset: Shovel, Pickaxe, Axe and Sword.<br><br>These tools can be socketed with up to 3 Spell Nodes. When their relative action is executed, that being breaking a block for tools or attacking a mob for the sword, the selected spell is activated. The spell in a Psimetal tool is selected the same way as a Rod. A fourth slot is also shown in the radial menu in case one wants to disable the tool's spells entirely. Psimetal tools will slowly regenerate and restore their damage using the player's Psi energy, in bursts, as long as the tool isn't the item currently in the player's hand.<br><br>Spells in a tool aren't casted by the tool, but rather by the Rod, therefore, the limitations imposed by the Rod's stats still stand.<br><br>This group introduces a few runes that can be used in conjuction with the tools. The red piece of this group, "Selector: Block Broken" is meant to be used with tools, and gets you a vector respective to where you broke the block in the world. "Selector: Block Broken Side" gets the side in which you broke that block.<br><br>Lastly "Selector: Attack Target" does exactly as it sounds, it gets you the entity you attacked with a sword when the spell is casted. It can also be used with Projectile Spell Nodes, to get the entity that the projectile collided against, if any.
Positive Effects
The ability to apply effects to entities is a must of any magical spellbook worth its weight. Luckily, you are not making spells with a spellbook, but you can still apply effects anyway.<br><br>All of the runes in this group will apply the respective potion effect to the target entity, for the target time (in seconds). If the piece also has a Power parameter, that defines the level of the effect to apply.<br><br>So, for example, "Trick: Speed" with Time 20 and Power 2 would apply a Spell II effect for 20 seconds to the target entity.
Negative Effects
As to be expected, after Positive Effects come Negative Effects.<br><br>There isn't much to say here, really. Everything in this group works exactly as expected. Have fun.
Focusing Plate Casting
Naturally the method of casting following a tool set would be an armor set. You can create the Focusing Plate using... you guessed it, Psimetal, as well as some Psigems. All the armor pieces of the set can be socketed with nodes, similarly to the Psimetal tools. Each piece handles a given "event", such as taking damage, or jumping. Whenever that event happens, the spell in the selected bullet will be cast.<br><br>The events are as follows:<br>&nHelmet&r: Sensor Based (read on).<br>&nChestplate&r: Player taking damage.<br>&nLeggings&r: Every tick.<br>&nBoots&r: Player jumping.<br><br>The Helmet can have Focusing Plate Sensors attached to it, by combining the two items in a crafting grid. Only one sensor can be attached at a time. The sensor can be removed by placing the helmet back on the crafting grid. There's a few sensors, such as the Light sensor, that triggers when the player enters the darkness, or the Stress sensor, that triggers when the player reaches low HP. Check them out at your leisure.<br><br>To control the Focusing Plate, you need to create an Focusing Plate Tablet. This item allows you to modify the selected nodes in each piece directly from your hand. Simply use your typical bullet selection hotkey with it equipped, this brings up a menu with the ability to change multiple slots. Use the left and right mouse buttons to select which item is being changed, it works as usual after that. You can also shift-right click the Focusing Plate Tablet to instantly disable all the effects of your armor.<br><br>Moving on to the runes. The group contains various selectors you can use to help your Focusing Plate casting. The red piece of the group is "Selector: Time". This returns the Rod's time, kind of like its "system clock", in ticks. It constantly increments. It can be useful if you want to make something that works differently depending on the time. You don't need a Focusing Plate to use it.<br><br>The other two runes in the group, "Selector: Attacker" and "Selector: Damage Taken" are to be used with the Focusing Plate Chestplate. The first selects the entity that attacked you, and the second the amount of damage you took.
Trigonometry
This group includes operators relevant to trigonometric functions. The red piece of this group: "Constant: Pi" is exactly what it says on the tin, a constant that gives you the value of Pi.<br><br>The group includes elementary trigonometric operations: sin, cos, asin and acos. The latter two being the inverse operators of sin and cos, also known as "sin^-1" or "cos^-1".<br><br>Lastly, "Operator: Vector Dot Product" gives you the Dot Product of two vectors, the product of the two vectors' magnitudes and the cosine of the angle between them. Using "Operator: Arc Cosine" on the result will allow you to get the angle between two vectors.
Smeltery
The runes included in this group are very simplistic in the way they function, as both revolve around the concept of smelting things into other things as if they were put in a furnace.<br>"Trick: Smelt Item" will smelt a dropped item (Entity) in the world into its smelted counterpart, one item at a time.<br><br>"Trick: Smelt Block" will smelt a block in the world into its smelted version, provided it's also a block. So while Cobblestone may be turned into Stone, Wood can't be turned into Charcoal. 
Flow Control
Flow Control is a somewhat complex subject. All the runes here included allow for a spell to function in wildly different manners from what was available in your arsenal before. However, understanding how to properly use these runes requires knowledge of the very internals of the spellcasting system. There are a few basic rules to be taken in mind to properly understand these concepts:<br>1. Spells execute in the order that the arrows drawn in the Spell Inscriber point towards.<br>2. Any given piece's value will only be evaulated once. Any further runes that require its value will just get the value evaluated the first time. For example, 3 instances of "Trick: Debug" pointing to the same "Operator: Random" will all print out the same value, as the random output will only be evaluted once.<br>3. A piece will only be evaluated when another piece requires its value. These chains are triggered by the Trick runes.<br>4. Tricks are always executed from left to right and top to bottom. Therefore, a Trick in the second row will always be executed after a trick in the first.<br><br>With that in mind, let's start off with the red piece of this group, "Trick: Sleep". This piece causes the spell to delay any further execution for the amount of ticks passed in. Knowing the order in which tricks execute, thanks to rule 4, putting this in the right place shouldn't be too hard. For those unaware, a Tick is a 1/20 fraction of a second. So if you wish to delay further processing of a spell by half a second, you would use 10 as the "Time" parameter. "Trick: Sleep" does not add any Projection to your spell, but does add Potency.<br><br>"Trick: Evaluate" is a trick that does absolutely nothing. Yes, you heard that right. This trick does nothing. It doesn't increment any stats on your spell either. Its only application is to make use of rule 2, and evaluate a value before a Sleep is executed, allowing you to, for example, get the position where an entity was, with "Selector: Entity Position", before the Sleep is applied, for a trick used after said Sleep.<br><br>"Trick: Die" is a Flow Control piece in the proper sense of the term. It takes a simple Number parameter, and if that number lies between -1 (exclusive) and 1 (also exclusive) it'll stop the spell's execution right then and there. Any other values will have the spell continue as usual. This piece doesn't add Projection. A very simple way to put it to use is to utilize "Selector: Sneak Status", which convinentely gives you 0 if the caster is sneaking and 1 if they're not. Almost as if they were made to go together!<br><br>"Constant: Wrapper" allows you to make use of Number type runes for tricks that would otherwise require a Number Constant. As you should know by now, the constant value given to a trick allows for calculation of the various stats of the spell before you even cast it, this being the normal reason variable numbers can't be fed into a trick. "Constant: Wrapper" requires two numbers, a constant one and a normal one. The constant value given to the piece will be the one used for any statistical calculation, whereas the normal number will be the one used for when the spell is actually put into use. The normal number's value will be capped out at the value of the constant one during spell execution, to prevent any sort of tomfoolery. The normal number is also always converted to a positive or negative number, depending on the sign of the constant number, so that the signs of both numbers match. If the constant number is 0, the result of this evaluation is always 0, regardless of the value of the normal number.
Block Conjuration
This group includes runes that do exactly as advertised, they conjure blocks.<br><br>The red piece of the group, "Trick: Conjure Block" creates a Conjured Block at the given position. A Conjured Block is a semi-transparent, physical block that can, optionally, if the "Time" parameter is specified, disappear from the world after a bit. If the "Time" parameter is used, it's specified in Ticks. For those unaware, a Tick is equivalent to 1/20th of a second, so if you want to make a block that disappears after half a second, set "Time" to 10 ticks.<br><br>"Trick: Conjure Light" conjures a light source instead, one that can't be collided against. "Trick: Conjure Block Sequence" functions much like "Trick: Place Block Sequence", but creates Conjured Blocks instead. Both these runes also include the very same "Time" parameter.<br><br>The color of the Conjured Blocks created is equal to that of the Varnish used in the Rod (or the default light blue case none is present). Varnishes whose color changes, such as the Rainbow varnish will also reflect in the visuals of the Conjured Blocks.
Eidos Manipulation
Eidos Spells allow for the caster to manipulate the space-time continuum in their favor.<br><br>The red piece of this group, "Trick: Eidos Reversal" retraces the caster's steps, at double speed, for the amount of time (in seconds) specified. Only one Reversal may be active at a time, and after a Reversal is cast, the effect of any subsequent cast is only available until the point where the last one ended. Sneaking will stop an ongoing Reversal.<br><br>The other trick piece of the group, "Trick: Eidos Anchor" creates an "anchor" effect on the caster. After the target amount of time (in seconds), the caster will be taken back to where their anchor was. Multiple casts of "Trick: Eidos Anchor" can be done, but only the last one will take effect.<br><br>Lastly "Selector: Eidos Changelog" takes a single number parameter (let's call it n), and gives you the position in the n'th index of the Eidos Changelog starting from the end. In simpler terms, it gives you a vector equal to the position that the caster was n ticks ago. Remember that "Trick: Eidos Reversal" takes the caster back in the changelog, wiping out any info that would come after. "Trick: Eidos Anchor" does not modify the changelog.
Detection & Focus
This group includes two types of runes, as the title says: detection, and focus. The red piece of the group falls under the "focus" area, however, in order to understand it, the concept of Slot Focus must be introduced.<br><br>An already known example of Slot Focus is the family of Place Block style tricks. These make use of the block directly to the right of your Rod. Slot Focus is the slot which tricks like these will use. It can be relative (to the position of your Rod) or absolute, can only be in the hotbar and goes from 1 to 9. By default, whenever a spell is cast, it's value is "Relative 1", so it's 1 slot to the right of your Rod. If it was "Relative -1" it would be 1 slot to the left of your Rod. "Absolute 3" would be the third slot in your hotbar. It also loops around, so if you have your Rod on your last slot and the value is "Relative 1", it'll be your first slot.<br><br>To set the focused slot, you can use "Trick: Switch Focus Slot", the red piece of this group. This takes one of 2 parameters. Both are optional and mutually exclusive, and if you don't define any, it'll set the focus to the default of "Relative 1". If you choose to set the "Position" parameter, it'll set an Absolute value, whereas the "Shift" parameter will set a Relative value. This allows you to, for example, build things with different blocks based on the circumstance. This trick only works for the current spell cast, and the focus will reset on the next time a spell is cast (even if it's the same spell).<br><br>The other two runes in the group are set in the "detection" area. First, "Selector: Item Presence" takes an optional slot number (if not set it'll default to your Focused Slot), and returns the amount of items in that slot, 0 if it's empty, of course. Lastly, "Selector: Block Presence" takes a vector, to be used as coordinates in the world, and finds the block there, the value returned is 0 if there's no block or a replaceable block (like tall grass), 1 if it's a non-solid block and 2 if it's a solid block.
Memory Management
This group introduces the ability for spells to harness Persistent Memory in one's Rod. A Rod can store Vector type values for use in future spellcasts. The amount of Vectors that can be stored is equal to the Rod's "Notches" stat divided by 3, rounded down. This is refered to the amount of Memory Slots present in the Rod.<br><br>The group includes two runes, simple IO style runes to read and write vectors to and from the memory. The red piece, "Trick: Save Vector" saves a vector to the target Memory Slot, whereas "Selector: Saved Vector" gets the vector saved in the Memory Slot defined by its only parameter. Memory Slots for these runes start in 1, so a Rod with 3 memory slots would accept values 1, 2, and 3. Both runes add Potency to the spell equivalent to the number of the slot used.<br><br>One imperfection with these runes is the fact that "Trick: Save Vector" "locks" the target Memory Slot when used, preventing any of the two runes from interacting with that same Memory Slot in the current spell cast after it goes through, be that read or write. So if you need to read the value in the slot before you write something, make sure to keep the fundamental rules of Flow Control in mind, to make sure the read goes through before the write.
Secondary Operators
As the name implies, this group includes mathematical operators that aren't quite as important as the "primary" ones, such as sum or subtract. This group is, really, just a mixed bag of all sorts of math or logic relates runes that can be used to help with spell creation. We'll separate the runes in two sets to make them easier to explain.<br><br>The first set is related to powers. Including runes like "Operator: Square", "Operator: Power", "Operator: Square Root" and even "Operator: Logarithm". Most of these operate in a pretty standard fashion, with not much to talk about, except "Operator: Logarithm". This piece, as the name implies, executes the logarithm of the number passed in. The piece takes an optional Base paramter, and will calculate the logarithm for that base. If no base is passed in, it'll default to base 10. There's also "Constant: e", if you feel like using that, for whatever reason.<br><br>The second set is related to logic. It includes runes that do rounding (to an integer), "Operator: Ceiling", "Operator: Floor" and "Operator Round", which respectively round up, round down and round depending on the fractional part of the number. It also includes "Operator: Min" and "Operator: Max". These are pretty simple. They, respectively, get the smallest number and the largest number between the various numbers passed in.